<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>AWESOM-O //
        <%= trans.PD_CARDS %>
    </title>

    <link rel="icon" type="image/png" href="/img/favicon.png" />
    <link rel="shortcut icon" type="image/png" href="/img/favicon.png" />
    <meta name="theme-color" content="#ff594f">

    <link rel="alternate" href="/" hreflang="x-default" />
    <link rel="alternate" href="/?hl=en" hreflang="en" />
    <link rel="alternate" href="/?hl=ie" hreflang="ie" />
    <link rel="alternate" href="/?hl=pt" hreflang="pt" />

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.2.0/css/all.css" integrity="sha384-hWVjflwFxL6sNzntih27bfxkr27PmbbK/iSvJ+a4+0owXq79v+lsFkW54bOGbiDQ"
        crossorigin="anonymous">
    <!-- Bootstrap core CSS -->
    <link href="/css/bootstrap.min.css" rel="stylesheet">
    <!-- Material Design Bootstrap -->
    <link href="/css/mdb.min.css" rel="stylesheet">

    <link href="/css/style.css" rel="stylesheet">

    <style>
        html,
        body,
        header,
        .jarallax {
            height: 400px;
        }

        .jarallax-card {
            height: 400px;
        }

        @media (max-width: 740px) {
            html,
            body,
            header,
            .view {
                height: 400px;
            }
        }

        @media (max-width: 768px) {
            .navbar:not(.top-nav-collapse) {
                background: #ff594f !important;
            }
        }

        @media (min-width: 800px) and (max-width: 850px) {
            .navbar:not(.top-nav-collapse) {
                background: rgba(255, 89, 79, 1) !important;
            }
        }

        .divider {
            height: 3px;
            display: block;
            background-color: rgba(0, 0, 0, .1);
            margin: 1em 0;
            width: 30px
        }

        .cardBg {
            -webkit-clip-path: polygon(15% 8%, 88% 8%, 93% 11%, 93% 88%, 88% 91%, 13% 91%, 9% 87%, 9% 11%);
            clip-path: polygon(15% 8%, 88% 8%, 93% 11%, 93% 88%, 88% 91%, 13% 91%, 9% 87%, 9% 11%);
            transform: translateY(30px);
            outline: red dashed;
        }

        .cardContainer {
            width: 90%;
            position: absolute;
            z-index: 10;
            transform-style: preserve-3d;
            will-change: transform;
            transform: perspective(500px) rotateX(0deg) rotateY(0deg);
        }

        .cardFrame {
            width: 100%;
            position: absolute;
            z-index: 20;
            transform: translateZ(15px) translateY(-100%);
            cursor: pointer;
        }

        .sortbutton {
            cursor: pointer;
        }

        .Gen {
            background-color: #857468;
            color: white;
        }

        .Adv {
            background-color: #4f80ba;
            color: white;
        }

        .Sci {
            background-color: #db571d;
            color: white;
        }

        .Mys {
            background-color: #4b9b38;
            color: white;
        }

        .Fan {
            background-color: #d34f5f;
            color: white;
        }

        .Gen {
            color: #857468;
        }

        .AdvText {
            color: #4f80ba;
        }

        .SciText {
            color: #db571d;
        }

        .MysText {
            color: #4b9b38;
        }

        .FanText {
            color: #d34f5f;
        }

        .dropdown-content li>a,
        .dropdown-content li>span {
            color: #212529;
        }

        @media (max-width: 992px) {
            #filters {
                padding-top: 20px;
            }
        }

        @media (min-width: 2300px) {
            .col-xxl-3 {
                -ms-flex: 0 0 25%;
                flex: 0 0 25%;
                max-width: 25%
            }
        }

        code {
            color: #ccc;
            background-color: #333;
            padding: 5px;
            padding-left: 10px;
            padding-right: 10px;
            border-radius: 5px
        }

        /* .cardCol {
            outline: red dashed 
        } */
    </style>

</head>

<body class="">

    <%- include partials/navbar.ejs %>


        <main>

            <div class="container pb-5 pt-5">

                <div class="row pt-5">
                    <!-- Sidebar -->
                    <div class="col-lg-4 pt-2">
                        <div class="cardCol">
                            <div id="" class="cardContainer sticky">
                            </div>
                        </div>
                    </div>

                    <!-- /.Sidebar -->
                    <div class="col-lg-8">
                        <div class="row">
                            <div id="card-info" class="col-12 pb-2">
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                <!--Accordion wrapper-->
                                <div class="accordion" id="accordionEx" role="tablist" aria-multiselectable="true">


                                </div>
                                <!--/.Accordion wrapper-->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="sticky-stopper" class="row pb-5"></div>
            <!-- Central Modal Small -->
            <div class="ThemeColour">
                <div class="container">
                    <div class="row py-4 d-flex align-items-center">

                        <div class="col-12 text-center mb-4 mb-md-0">
                            <h6 class="mb-0 white-text">
                                <a style="color: inherit; text-decoration: inherit;" href="/terms#redlynx">
                                    <%= trans.RED_LYNX_DISCLAIMER %>
                                </a>
                            </h6>
                        </div>

                    </div>

                </div>
            </div>
            <%- include partials/footer.ejs %>

                <!--/.Footer-->


                <!-- SCRIPTS -->

                <!-- JQuery -->
                <script type="text/javascript" src="/js/jquery-3.2.1.min.js"></script>

                <!-- Bootstrap tooltips -->
                <script type="text/javascript" src="/js/popper.min.js"></script>

                <!-- Bootstrap core JavaScript -->
                <script type="text/javascript" src="/js/bootstrap.min.js"></script>

                <!-- MDB core JavaScript -->
                <script type="text/javascript" src="/js/mdb.min.js"></script>

                <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/tilt.js/1.2.1/tilt.jquery.min.js"></script>

                <script type="text/javascript" src="/js/anime.min.js"></script>

                <script>
                    //Animation init
                    new WOW().init();


                    //change size responsively
                    const changeCardSize = function () {
                        $(".cardCol").css("height", $(".cardFrame").height());
                    };

                    //shift card art upwards when on small screens
                    const mobileArtCompensator = function () {
                        if ($(window).width() <= 475) {
                            const width = $(window).width();

                            const compensate = 22 + ((475 - width) / 20)

                            $(".cardBg").css("transform", "translateY(" + compensate + "px)");
                        };
                    };

                    // Material Select Initialization
                    $(document).ready(function () {
                        function camelPad(str) {
                            return str
                                // Look for long acronyms and filter out the last letter
                                .replace(/([A-Z]+)([A-Z][a-z])/g, ' $1 $2')
                                // Look for lower-case letters followed by upper-case letters
                                .replace(/([a-z\d])([A-Z])/g, '$1 $2')
                                // Look for lower-case letters followed by numbers
                                .replace(/([a-zA-Z])(\d)/g, '$1 $2')
                                .replace(/^./, function (str) {
                                    return str.toUpperCase();
                                })
                                // Remove any white space left around the word
                                .trim();
                        }
                        //get them cards
                        const getCards = new XMLHttpRequest();
                        getCards.open("GET",
                            `https://gist.githubusercontent.com/MattheousDT/3f45f903f05c1f56cdf7bd528d77dcd1/raw/4e4c6be506b01f93ab51b838adc46d39c85f4fc7/cards_15aug.json`,
                            false);
                        getCards.send();
                        const cardsYay = JSON.parse(getCards.response);
                        const cardsList = $("#cardsList");




                        //sorting

                        //var urlParams = window.location.href.substring(window.location.href.indexOf("?hl=") + 6);

                        //const validThemes = ["all", "neutral", "adventure", "sci-fi", "mystical",
                        //    "fantasy"
                        //];
                        //if (validThemes.includes(themeCookie) === true) {
                        //    var theme = themeCookie;
                        //} else {
                        //    var theme = false;
                        //}

                        const url = window.location.pathname
                        const currentCard = url.substring(22);
                        $(function () {
                            $(".sticky").sticky({
                                topSpacing: 90,
                                zIndex: 2,
                                stopper: "#sticky-stopper"
                            });
                        });

                        for (let i = 0; i < cardsYay.length; i++) {
                            if (cardsYay[i].Image === currentCard) {
                                console.log(cardsYay[i])
                                if (cardsYay[i].Name instanceof Array) {
                                    var cardName = cardsYay[i].Name[0];
                                } else {
                                    var cardName = cardsYay[i].Name;
                                };

                                if (cardsYay[i].Rarity === 0) {
                                    var rarity = "Common";
                                } else if (cardsYay[i].Rarity === 1) {
                                    var rarity = "Rare";
                                } else if (cardsYay[i].Rarity === 2) {
                                    var rarity = "Epic";
                                } else if (cardsYay[i].Rarity === 3) {
                                    var rarity = "Legendary";
                                }


                                $(".cardContainer").html(
                                    `
                                <img class="img-fluid cardBg" src="/cards/backgrounds/${cardsYay[i].Image}.jpg">
                                <div class="cardFrame">
                                    <img class="img-fluid" src="/cards/frames/frame_${cardsYay[i].Image}.png">
                                </div>
                                `
                                )

                                $("#card-info").html(
                                    `
                                    <div class="" style="width: 100%">
                                                <h1 class="font-weight-bold mb-2 mt-2">
                                                    ${cardName}
                                                    <sup>
                                                        <a id="share-card" style="font-size: 16pt" data-toggle="tooltip" data-placement="top" title="Copy link to card">
                                                            <i class="fa fa-share-square" aria-hidden="true"></i>
                                                        </a>
                                                    </sup>
                                                </h1>
                                                <h4 class="font-weight-bold dark-grey-text">${rarity} | ${cardsYay[i].CharacterType}
                                                    
                                                </h4>
                                                <h4 class="font-weight-bold dark-grey-text">
                                                    <span class="light-blue-text">
                                                        <i class="fa fa-bolt" aria-hidden="true"></i> ${cardsYay[i].ManaCost}
                                                    </span> | <span class="red-text">
                                                        <i class="fa fa-heart" aria-hidden="true"></i> <span id="health">${cardsYay[i].Health}</span>
                                                    </span> | <span class="orange-text">
                                                        <i class="fa fa-shield-alt" aria-hidden="true"></i> <span id="damage">${cardsYay[i].Damage}</span>
                                                    </span>
                                                </h4>
                                                <h5 id="desc" class="font-italic">${cardsYay[i].Description}</h5>
                                            </div>
                                            
                                            <div class="pt-4">
                                        <h5 class="font-weight-bold ThemeText">Select an upgrade level</h5>
                                        <div class="col-6 pl-0">
                                        <select id="level-select" class="mdb-select">
                                        <option>Upgrade 1 / 70</option>
                                        <option>Upgrade 2 / 70</option>
                                        <option>Upgrade 3 / 70</option>
                                        <option>Upgrade 4 / 70</option>
                                        <option>Upgrade 5 / 70</option>
                                        <option>Level 1</option>
                                        <option>Upgrade 6 / 70</option>
                                        <option>Upgrade 7 / 70</option>
                                        <option>Upgrade 8 / 70</option>
                                        <option>Upgrade 9 / 70</option>
                                        <option>Upgrade 10 / 70</option>
                                        <option>Upgrade 11 / 70</option>
                                        <option>Upgrade 12 / 70</option>
                                        <option>Upgrade 13 / 70</option>
                                        <option>Upgrade 14 / 70</option>
                                        <option>Upgrade 15 / 70</option>
                                        <option>Level 2</option>
                                        <option>Upgrade 16 / 70</option>
                                        <option>Upgrade 17 / 70</option>
                                        <option>Upgrade 18 / 70</option>
                                        <option>Upgrade 19 / 70</option>
                                        <option>Upgrade 20 / 70</option>
                                        <option>Upgrade 21 / 70</option>
                                        <option>Upgrade 22 / 70</option>
                                        <option>Upgrade 23 / 70</option>
                                        <option>Upgrade 24 / 70</option>
                                        <option>Upgrade 25 / 70</option>
                                        <option>Level 3</option>
                                        <option>Upgrade 26 / 70</option>
                                        <option>Upgrade 27 / 70</option>
                                        <option>Upgrade 28 / 70</option>
                                        <option>Upgrade 29 / 70</option>
                                        <option>Upgrade 30 / 70</option>
                                        <option>Upgrade 31 / 70</option>
                                        <option>Upgrade 32 / 70</option>
                                        <option>Upgrade 33 / 70</option>
                                        <option>Upgrade 34 / 70</option>
                                        <option>Upgrade 35 / 70</option>
                                        <option>Upgrade 36 / 70</option>
                                        <option>Upgrade 37 / 70</option>
                                        <option>Upgrade 38 / 70</option>
                                        <option>Upgrade 39 / 70</option>
                                        <option>Upgrade 40 / 70</option>
                                        <option>Level 4</option>
                                        <option>Upgrade 41 / 70</option>
                                        <option>Upgrade 42 / 70</option>
                                        <option>Upgrade 43 / 70</option>
                                        <option>Upgrade 44 / 70</option>
                                        <option>Upgrade 45 / 70</option>
                                        <option>Upgrade 46 / 70</option>
                                        <option>Upgrade 47 / 70</option>
                                        <option>Upgrade 48 / 70</option>
                                        <option>Upgrade 49 / 70</option>
                                        <option>Upgrade 50 / 70</option>
                                        <option>Upgrade 51 / 70</option>
                                        <option>Upgrade 52 / 70</option>
                                        <option>Upgrade 53 / 70</option>
                                        <option>Upgrade 54 / 70</option>
                                        <option>Upgrade 55 / 70</option>
                                        <option>Level 5</option>
                                        <option>Upgrade 56 / 70</option>
                                        <option>Upgrade 57 / 70</option>
                                        <option>Upgrade 58 / 70</option>
                                        <option>Upgrade 59 / 70</option>
                                        <option>Upgrade 60 / 70</option>
                                        <option>Upgrade 61 / 70</option>
                                        <option>Upgrade 62 / 70</option>
                                        <option>Upgrade 63 / 70</option>
                                        <option>Upgrade 64 / 70</option>
                                        <option>Upgrade 65 / 70</option>
                                        <option>Upgrade 66 / 70</option>
                                        <option>Upgrade 67 / 70</option>
                                        <option>Upgrade 68 / 70</option>
                                        <option>Upgrade 69 / 70</option>
                                        <option>Upgrade 70 / 70</option>
                                        <option>Level 6</option>
                                    </select>
                                    </div>
                                    <h5 class="font-weight-bold ThemeText">AWESOM-O Commands</h5>
                                    <ul id="awesomo-commands" class="list-unstyled">
                                        <code>-card ${cardsYay[i].Name.toLowerCase()}</code>
                                    </ul>
                                    <h5 class="font-weight-bold ThemeText">General Information</h5>
                                    <ul class="list-unstyled align">
                                        <li>
                                            <span class="font-weight-bold dark-grey-text">Cast Area:</span>
                                            <span >${camelPad(cardsYay[i].CastArea)}</span>
                                        </li>
                                        <li>
                                            <span class="font-weight-bold dark-grey-text">Max Velocity:</span>
                                            <span >${cardsYay[i].MaxVelocity}</span>
                                        </li>
                                        <li>
                                            <span class="font-weight-bold dark-grey-text">Time To Reach Max Velocity:</span>
                                            <span>${cardsYay[i].TimeToReachMaxVelocity} seconds</span>
                                        </li>
                                        <li>
                                            <span class="font-weight-bold dark-grey-text">Agro Range Multiplier:</span>
                                            <span>${cardsYay[i].AgroRangeMultiplier}x</span>
                                        </li>
                                    </ul>    
                                <h5 id="attack" class="font-weight-bold ThemeText">Can Attack?</h5>
                                    <ul id="attack-info" class="list-unstyled align">
                                    </ul>
                                    <h5 id="aoe" class="font-weight-bold ThemeText">AOE Attacks?</h5>
                                    <ul id="aoe-info" class="list-unstyled">

                                    </ul>
                                    <h5 class="font-weight-bold ThemeText">Power Information</h5>
                                    <ul class="list-unstyled">
                                        <li class="power-stat">
                                            <span class="font-weight-bold dark-grey-text">Attack Boost:</span>
                                            <span class="power-stat-value">${cardsYay[i].PowerAttackBoost}</span>
                                        </li>
                                        <li class="power-stat">
                                            <span class="font-weight-bold dark-grey-text">Attack Decrease:</span>
                                            <span class="power-stat-value">${cardsYay[i].PowerAttackDecrease}</span>
                                        </li>
                                        <li class="power-stat">
                                            <span class="font-weight-bold dark-grey-text">Damage:</span>
                                            <span class="power-stat-value">${cardsYay[i].PowerDamage}</span>
                                        </li>
                                        <li class="power-stat">
                                            <span class="font-weight-bold dark-grey-text">Duration:</span>
                                            <span class="power-stat-value">${cardsYay[i].PowerDuration}</span>
                                        </li>
                                        <li class="power-stat">
                                            <span class="font-weight-bold dark-grey-text">Heal:</span>
                                            <span class="power-stat-value">${cardsYay[i].PowerHeal}</span>
                                        </li>
                                        <li class="power-stat">
                                            <span class="font-weight-bold dark-grey-text">Hero Damage:</span>
                                            <span class="power-stat-value">${cardsYay[i].PowerHeroDamage}</span>
                                        </li>
                                        <li class="power-stat">
                                            <span class="font-weight-bold dark-grey-text">Hero Heal:</span>
                                            <span class="power-stat-value">${cardsYay[i].PowerHeroHeal}</span>
                                        </li>
                                        <li class="power-stat">
                                            <span class="font-weight-bold dark-grey-text">Poison:</span>
                                            <span class="power-stat-value">${cardsYay[i].PowerHeroPoison}</span>
                                        </li>
                                        <li class="power-stat">
                                            <span class="font-weight-bold dark-grey-text">Max HP Gain:</span>
                                            <span class="power-stat-value">${cardsYay[i].PowerMaxHPGain}</span>
                                        </li>
                                        <li class="power-stat">
                                            <span class="font-weight-bold dark-grey-text">Max HP Loss:</span>
                                            <span class="power-stat-value">${cardsYay[i].PowerMaxHPLoss}</span>
                                        </li>
                                        <li class="power-stat">
                                            <span class="font-weight-bold dark-grey-text">Poision Amount:</span>
                                            <span class="power-stat-value">${cardsYay[i].PowerPoisonAmount}</span>
                                        </li>
                                        <li class="power-stat">
                                            <span class="font-weight-bold dark-grey-text">Summon Level:</span>
                                            <span class="power-stat-value">${cardsYay[i].PowerSummonLevel}</span>
                                        </li>
                                        <li class="power-stat">
                                            <span class="font-weight-bold dark-grey-text">Charged Power Radius:</span>
                                            <span class="power-stat-value">${cardsYay[i].ChargedPowerRadius /2}</span>
                                        </li>
                                        <li class="power-stat">
                                            <span class="font-weight-bold dark-grey-text">Charged Power Regen:</span>
                                            <span class="power-stat-value">${Math.round(cardsYay[i].ChargedPowerRegen * 100) / 100}</span>
                                        </li>
                                    </ul>
                                    <h5 class="font-weight-bold ThemeText">Requirements</h5>
                                    <ul class="list-unstyled">
                                        <li>
                                            <span class="font-weight-bold dark-grey-text">Minimum Episode Completed:</span>
                                            <span id="modal-minimum-pvp-rank">${cardsYay[i].Requirements.MinEpisodeCompleted}</span>
                                        </li>
                                        <li>
                                            <span class="font-weight-bold dark-grey-text">Minimum PVP Rank Required:</span>
                                            <span id="modal-minimum-pvp-rank">${cardsYay[i].Requirements.MinPVPRank}</span>
                                        </li>
                                        <li>
                                            <span class="font-weight-bold dark-grey-text">Minimum Player Level:</span>
                                            <span id="modal-minimum-pvp-rank">${cardsYay[i].Requirements.MinPlayerLevel}</span>
                                        </li>
                                    </ul>
                                    </div>
                                    <div id="table">
                                    </div>
                                `
                                );
                                $('.mdb-select').material_select();
                                const cardID = cardsYay[i]

                                //replace redlynx's cunty shit

                                $("#desc").text(function () {
                                    return $(this).text().replace(
                                        "{PowerDurationMin}-{PowerDurationMax}", cardsYay[i].PowerDuration +
                                        " seconds");
                                });
                                $("#desc").text(function () {
                                    return $(this).text().replace("{PowerHeroPoison}", cardsYay[i].PowerPoisonAmount);
                                });
                                $("#desc").text(function () {
                                    if (cardsYay[i].PowerHeroDamage === null) {
                                        return $(this).text().replace("{PowerHeroDamage}", cardsYay[i].PowerDamage);
                                    } else {
                                        return $(this).text().replace("{PowerHeroDamage}", cardsYay[i].PowerHeroDamage);
                                    }
                                });
                                $("#desc").text(function () {
                                    return $(this).text().replace("{PowerDuration}", cardsYay[i].PowerDuration +
                                        " seconds");
                                });
                                $("#desc").text(function () {
                                    return $(this).text().replace("{PowerHeal}", cardsYay[i].PowerHeal);
                                });
                                $("#desc").text(function () {
                                    return $(this).text().replace("{PowerAttackBoost}", cardsYay[i].PowerAttackBoost);
                                });
                                $("#desc").text(function () {
                                    return $(this).text().replace("{PowerTargetAmount}", "1");
                                });

                                //Hide unnessasary power stats
                                $(".power-stat-value:contains('null')").parent().hide()
                                //$(".power-stat-value:contains('0')").parent().hide()
                                $(".power-stat-value").filter(function () {
                                    return $(this).text() === "0";
                                }).parent().hide();
                                //change null to n/a cause it looks better innit
                                $.each($('span'), function (i, e) {
                                    $(e).html($(e).html().replace(/null/g, 'N/A'));
                                });

                                const upgrades = [];

                                
                                for (let h = 0; h < cardsYay[i].TechTree2.Slots.length; h++) {
                                    //console.log(cardsYay[i].TechTree2.Slots[h])
                                    if (cardsYay[i].TechTree2.Slots[h].property == "MaxHealth") {
                                        //console.log(cardsYay[i].TechTree2.Slots[h])

                                        console.log(h)
                                        let urma = {
                                            "upgrade": h,
                                            "attr": "Health",
                                            "value": parseFloat(cardsYay[i].Health) + (parseFloat(cardsYay[
                                                i].TechTree2.Slots[h].value))
                                        };
                                        upgrades.push(urma)
                                    }
                                }

                                console.log(upgrades)
                                $("#level-select").change(function () {
                                    const selected = $("#level-select option:selected").index();

                                });


                                /* $("#tags").html("");

                                for (let t = 0; t < cardsYay[i].tags.length; t++) {
                                    $("#tags").append(
                                        ` <span class="badge badge-pill ThemeColour">${cardsYay[i].tags[t]}</span> `
                                    );
                                };
                                */
                                $("#collapse1").collapse();
                                $(".ThemeText").addClass(cardsYay[i].Theme + "Text");
                                $(".ThemeColour").addClass(cardsYay[i].Theme);

                                //Attack Information
                                if (cardsYay[i].CanAttack === false) {
                                    $("#attack").html(
                                        `Can Attack? <span><i class="red-text fa fa-close "><i></span>`);
                                } else {
                                    $("#attack").html(
                                        `Can Attack? <span class="green-text"><i class="fa fa-check "></span>`
                                    );
                                    $("#attack-info").html(
                                        `
                                        <li>
                                            <span class="font-weight-bold dark-grey-text">Attack Range:</span>
                                            <span>${cardsYay[i].AttackRange / 2}</span>
                                        </li>
                                        <li>
                                            <span class="font-weight-bold dark-grey-text">Pre-Attack Delay:</span>
                                            <span>${cardsYay[i].PreAttackDelay}</span>
                                        </li>
                                        <li>
                                            <span class="font-weight-bold dark-grey-text">Knockback:</span>
                                            <span>${Math.round(cardsYay[i].KnockbackImpulse)} at ${cardsYay[i].KnockbackAngleDeg}°</span>
                                        </li>
                                        <li>
                                            <span class="font-weight-bold dark-grey-text">Time In Between Attacks:</span>
                                            <span>${cardsYay[i].TimeInBetweenAttacks}</span>
                                        </li>
                                    `
                                    )
                                };

                                //AOE Attack
                                if (cardsYay[i].AOEAttackType === "No" || cardsYay[i].AOEAttackType ===
                                    undefined) {
                                    $("#aoe").html(
                                        `AOE Attacks? <span><i class="red-text fa fa-close "><i></span>`);
                                } else {
                                    $("#aoe").html(
                                        `AOE Attacks? <span class="green-text">${cardsYay[i].AOEAttackType}</span>`
                                    );
                                    $("#aoe-info").html(
                                        `
                                        <li>
                                            <span class="font-weight-bold dark-grey-text">AOE Damage Percentage:</span>
                                            <span>${cardsYay[i].AOEDamagePercentage}%</span>
                                        </li>
                                        <li>
                                            <span class="font-weight-bold dark-grey-text">AOE Knockback Percentage:</span>
                                            <span>${cardsYay[i].AOEKnockbackPercentage}%</span>
                                        </li>
                                        <li>
                                            <span class="font-weight-bold dark-grey-text">AOE Radius:</span>
                                            <span>${cardsYay[i].AOERadius / 2}</span>
                                        </li>
                                    `
                                    )
                                };
                            }
                            //END OF FOR LOOP


                            if (cardsYay[i].name instanceof Array) {
                                for (let c = 0; c < cardsYay[i].name.length; c++) {
                                    $("#awesomo-commands").append(
                                        `<li class="mt-2">
                                            <span class="font-weight-bold dark-grey-text"><code>-card ${cardsYay[i].name[c].toLowerCase()}</code></span>
                                        </li>`
                                    );
                                }
                            };
                        };

                        $(function () {
                            $('[data-toggle="tooltip"]').tooltip()
                        });
                        $("#share-card").click(function () {
                            var dummy = document.createElement('input'),
                                text = window.location.href;

                            document.body.appendChild(dummy);
                            dummy.value = text;
                            dummy.select();
                            document.execCommand('copy');
                            document.body.removeChild(dummy);
                        });

                        changeCardSize();
                        //mobileArtCompensator();

                        //update the card size quickly on page load
                        setInterval(function () {
                            changeCardSize();

                        }, 500)


                    })

                    //shit to do when people try to resize to see if i've forgot to do stuff but i havent because im a world class web dev
                    $(window).resize(function () {
                        changeCardSize();
                        //mobileArtCompensator();

                    })
                </script>

</body>

</html>